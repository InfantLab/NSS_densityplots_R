geom_text(label = "Rank", x = .1, y = 8, size = 4, color = "black")+
geom_text(label = r18, x = .1, y = 7.2, size = 6, color = "black")+
geom_text(label = r17, x = .1, y = 6.4, size = 4, color = "green")+
geom_text(label = "Score", x = .1, y = 4, size = 4, color = "black")+
geom_text(label = s18, x = .1, y = 3.2, size = 6, color = "black")+
geom_text(label = s17, x = .1, y = 2.4, size = 4, color = "green")+
xlim(0,1)
if(savepng){
qpng<-paste(Q, '.png')
ggsave(qpng,width= 10, height = 6)
}
}
goldposition(nss18,nss17,'Q08')
goldposition(nss18,nss17,'Q01')
goldposition <- function(thisYear,lastYear, Q, savepng = FALSE) {
#get the info for 2017
thisQ17<-dplyr::filter(lastYear, Question == Q)
Gold<-dplyr::filter(thisQ17,INStitution == 'Goldsmiths College')
#individual goldsmiths scores
gscore17<-Gold$Satisfaction
#text of question (with 2017 rank at end)
qtext<-paste(Q, ':  ',Gold$QuText)
#extract rank
pos1 = str_locate(qtext,fixed("("))[1]
pos2 = str_locate(qtext,fixed(")"))[1]
rank17 = substr(qtext,pos1+1,pos2-1)
#shorten question
qtext = substr(qtext, 0, pos1-1)
#get the info 2018, the column names are different
thisQ18<-dplyr::filter(thisYear, `Question Number` == Q)
Gold<-dplyr::filter(thisQ18,Provider == "Goldsmiths' College")
gscore18<-Gold$`Actual value`
#qtext<-Q  #paste(Q, ':  ',Gold$QuText)
#Goldsmiths rank this year?
rnk<-rank(thisQ18$'Actual value', ties.method = "min")
wh<-which(thisQ18$Provider == "Goldsmiths' College", arr.ind=TRUE)
rank18<-toString(rnk[wh])
if((rnk[wh+1]=rnk[wh]) || (rnk[wh-1]=rnk[wh])){
rank18 = paste("=", rank18, sep ="")
}
r18 = paste("2018: ",rank18,sep="")
r17 = paste("2017: ",rank17,sep="")
ranks = paste("RANK\n2018: ",rank18,"\n2017: ",rank17,sep="")
s18 = paste("2018: ",toString(gscore18*100), "%",sep="")
s17 = paste("2017: ",toString(gscore17*100), "%",sep="")
ggplot(data=thisQ18)+
geom_density(data=thisQ17,aes(Satisfaction),color="green") +
geom_segment(aes(x=gscore17,xend=gscore17,y=0,yend=9), color="green") +
geom_density(data=thisQ18,aes(`Actual value`)) +
geom_segment(aes(x=gscore18,xend=gscore18,y=0,yend=9)) +
ggtitle(qtext) +
geom_text(label = "Rank", x = .1, y = 8, size = 4, color = "black")+
geom_text(label = r18, x = .1, y = 7.2, size = 6, color = "black")+
geom_text(label = r17, x = .1, y = 6.4, size = 4, color = "green")+
geom_text(label = "Score", x = .1, y = 4, size = 4, color = "black")+
geom_text(label = s18, x = .1, y = 3.2, size = 6, color = "black")+
geom_text(label = s17, x = .1, y = 2.4, size = 4, color = "green")+
xlim(0,1)
if(savepng==TRUE){
qpng<-paste(Q, '.png')
ggsave(qpng,width= 10, height = 6)
}
}
goldposition(nss18,nss17,'Q01')
goldposition(nss18,nss17,'Q02')
goldposition(nss18,nss17,'Q01')
goldposition <- function(thisYear,lastYear, Q) {
savepng = FALSE
#get the info for 2017
thisQ17<-dplyr::filter(lastYear, Question == Q)
Gold<-dplyr::filter(thisQ17,INStitution == 'Goldsmiths College')
#individual goldsmiths scores
gscore17<-Gold$Satisfaction
#text of question (with 2017 rank at end)
qtext<-paste(Q, ':  ',Gold$QuText)
#extract rank
pos1 = str_locate(qtext,fixed("("))[1]
pos2 = str_locate(qtext,fixed(")"))[1]
rank17 = substr(qtext,pos1+1,pos2-1)
#shorten question
qtext = substr(qtext, 0, pos1-1)
#get the info 2018, the column names are different
thisQ18<-dplyr::filter(thisYear, `Question Number` == Q)
Gold<-dplyr::filter(thisQ18,Provider == "Goldsmiths' College")
gscore18<-Gold$`Actual value`
#qtext<-Q  #paste(Q, ':  ',Gold$QuText)
#Goldsmiths rank this year?
rnk<-rank(thisQ18$'Actual value', ties.method = "min")
wh<-which(thisQ18$Provider == "Goldsmiths' College", arr.ind=TRUE)
rank18<-toString(rnk[wh])
if((rnk[wh+1]=rnk[wh]) || (rnk[wh-1]=rnk[wh])){
rank18 = paste("=", rank18, sep ="")
}
r18 = paste("2018: ",rank18,sep="")
r17 = paste("2017: ",rank17,sep="")
ranks = paste("RANK\n2018: ",rank18,"\n2017: ",rank17,sep="")
s18 = paste("2018: ",toString(gscore18*100), "%",sep="")
s17 = paste("2017: ",toString(gscore17*100), "%",sep="")
ggplot(data=thisQ18)+
geom_density(data=thisQ17,aes(Satisfaction),color="green") +
geom_segment(aes(x=gscore17,xend=gscore17,y=0,yend=9), color="green") +
geom_density(data=thisQ18,aes(`Actual value`)) +
geom_segment(aes(x=gscore18,xend=gscore18,y=0,yend=9)) +
ggtitle(qtext) +
geom_text(label = "Rank", x = .1, y = 8, size = 4, color = "black")+
geom_text(label = r18, x = .1, y = 7.2, size = 6, color = "black")+
geom_text(label = r17, x = .1, y = 6.4, size = 4, color = "green")+
geom_text(label = "Score", x = .1, y = 4, size = 4, color = "black")+
geom_text(label = s18, x = .1, y = 3.2, size = 6, color = "black")+
geom_text(label = s17, x = .1, y = 2.4, size = 4, color = "green")+
xlim(0,1)
if(savepng==TRUE){
qpng<-paste(Q, '.png')
ggsave(qpng,width= 10, height = 6)
}
}
goldposition(nss18,nss17,'Q01')
goldposition <- function(thisYear,lastYear, Q) {
savepng = FALSE
#get the info for 2017
thisQ17<-dplyr::filter(lastYear, Question == Q)
Gold<-dplyr::filter(thisQ17,INStitution == 'Goldsmiths College')
#individual goldsmiths scores
gscore17<-Gold$Satisfaction
#text of question (with 2017 rank at end)
qtext<-paste(Q, ':  ',Gold$QuText)
#extract rank
pos1 = str_locate(qtext,fixed("("))[1]
pos2 = str_locate(qtext,fixed(")"))[1]
rank17 = substr(qtext,pos1+1,pos2-1)
#shorten question
qtext = substr(qtext, 0, pos1-1)
#get the info 2018, the column names are different
thisQ18<-dplyr::filter(thisYear, `Question Number` == Q)
Gold<-dplyr::filter(thisQ18,Provider == "Goldsmiths' College")
gscore18<-Gold$`Actual value`
#qtext<-Q  #paste(Q, ':  ',Gold$QuText)
#Goldsmiths rank this year?
rnk<-rank(thisQ18$'Actual value', ties.method = "min")
wh<-which(thisQ18$Provider == "Goldsmiths' College", arr.ind=TRUE)
rank18<-toString(rnk[wh])
if((rnk[wh+1]=rnk[wh]) || (rnk[wh-1]=rnk[wh])){
rank18 = paste("=", rank18, sep ="")
}
r18 = paste("2018: ",rank18,sep="")
r17 = paste("2017: ",rank17,sep="")
ranks = paste("RANK\n2018: ",rank18,"\n2017: ",rank17,sep="")
s18 = paste("2018: ",toString(gscore18*100), "%",sep="")
s17 = paste("2017: ",toString(gscore17*100), "%",sep="")
ggplot(data=thisQ18)+
geom_density(data=thisQ17,aes(Satisfaction),color="green") +
geom_segment(aes(x=gscore17,xend=gscore17,y=0,yend=9), color="green") +
geom_density(data=thisQ18,aes(`Actual value`)) +
geom_segment(aes(x=gscore18,xend=gscore18,y=0,yend=9)) +
ggtitle(qtext) +
geom_text(label = "Rank", x = .1, y = 8, size = 4, color = "black")+
geom_text(label = r18, x = .1, y = 7.2, size = 6, color = "black")+
geom_text(label = r17, x = .1, y = 6.4, size = 4, color = "green")+
geom_text(label = "Score", x = .1, y = 4, size = 4, color = "black")+
geom_text(label = s18, x = .1, y = 3.2, size = 6, color = "black")+
geom_text(label = s17, x = .1, y = 2.4, size = 4, color = "green")+
xlim(0,1)
# if(savepng==TRUE){
#   qpng<-paste(Q, '.png')
#   ggsave(qpng,width= 10, height = 6)
# }
}
goldposition(nss18,nss17,'Q01')
goldposition <- function(thisYear,lastYear, Q) {
savepng = FALSE
#get the info for 2017
thisQ17<-dplyr::filter(lastYear, Question == Q)
Gold<-dplyr::filter(thisQ17,INStitution == 'Goldsmiths College')
#individual goldsmiths scores
gscore17<-Gold$Satisfaction
#text of question (with 2017 rank at end)
qtext<-paste(Q, ':  ',Gold$QuText)
#extract rank
pos1 = str_locate(qtext,fixed("("))[1]
pos2 = str_locate(qtext,fixed(")"))[1]
rank17 = substr(qtext,pos1+1,pos2-1)
#shorten question
qtext = substr(qtext, 0, pos1-1)
#get the info 2018, the column names are different
thisQ18<-dplyr::filter(thisYear, `Question Number` == Q)
Gold<-dplyr::filter(thisQ18,Provider == "Goldsmiths' College")
gscore18<-Gold$`Actual value`
#qtext<-Q  #paste(Q, ':  ',Gold$QuText)
#Goldsmiths rank this year?
rnk<-rank(thisQ18$'Actual value', ties.method = "min")
wh<-which(thisQ18$Provider == "Goldsmiths' College", arr.ind=TRUE)
rank18<-toString(rnk[wh])
if((rnk[wh+1]=rnk[wh]) || (rnk[wh-1]=rnk[wh])){
rank18 = paste("=", rank18, sep ="")
}
r18 = paste("2018: ",rank18,sep="")
r17 = paste("2017: ",rank17,sep="")
ranks = paste("RANK\n2018: ",rank18,"\n2017: ",rank17,sep="")
s18 = paste("2018: ",toString(gscore18*100), "%",sep="")
s17 = paste("2017: ",toString(gscore17*100), "%",sep="")
ggplot(data=thisQ18)+
geom_density(data=thisQ17,aes(Satisfaction),color="darkgreen") +
geom_segment(aes(x=gscore17,xend=gscore17,y=0,yend=9), color="darkgreen") +
geom_density(data=thisQ18,aes(`Actual value`)) +
geom_segment(aes(x=gscore18,xend=gscore18,y=0,yend=9)) +
ggtitle(qtext) +
geom_text(label = "Rank", x = .1, y = 8, size = 4, color = "black")+
geom_text(label = r18, x = .1, y = 7.2, size = 6, color = "black")+
geom_text(label = r17, x = .1, y = 6.4, size = 4, color = "darkgreen")+
geom_text(label = "Score", x = .1, y = 4, size = 4, color = "black")+
geom_text(label = s18, x = .1, y = 3.2, size = 6, color = "black")+
geom_text(label = s17, x = .1, y = 2.4, size = 4, color = "darkgreen")+
xlim(0,1)
# if(savepng==TRUE){
#   qpng<-paste(Q, '.png')
#   ggsave(qpng,width= 10, height = 6)
# }
}
goldposition(nss18,nss17,'Q01')
goldposition <- function(thisYear,lastYear, Q) {
savepng = FALSE
#get the info for 2017
thisQ17<-dplyr::filter(lastYear, Question == Q)
Gold<-dplyr::filter(thisQ17,INStitution == 'Goldsmiths College')
#individual goldsmiths scores
gscore17<-Gold$Satisfaction
#text of question (with 2017 rank at end)
qtext<-paste(Q, ':  ',Gold$QuText)
#extract rank
pos1 = str_locate(qtext,fixed("("))[1]
pos2 = str_locate(qtext,fixed(")"))[1]
rank17 = substr(qtext,pos1+1,pos2-1)
#shorten question
qtext = substr(qtext, 0, pos1-1)
#get the info 2018, the column names are different
thisQ18<-dplyr::filter(thisYear, `Question Number` == Q)
Gold<-dplyr::filter(thisQ18,Provider == "Goldsmiths' College")
gscore18<-Gold$`Actual value`
#qtext<-Q  #paste(Q, ':  ',Gold$QuText)
#Goldsmiths rank this year?
rnk<-rank(thisQ18$'Actual value', ties.method = "min")
wh<-which(thisQ18$Provider == "Goldsmiths' College", arr.ind=TRUE)
rank18<-toString(rnk[wh])
if((rnk[wh+1]=rnk[wh]) || (rnk[wh-1]=rnk[wh])){
rank18 = paste("=", rank18, sep ="")
}
r18 = paste("2018: ",rank18,sep="")
r17 = paste("2017: ",rank17,sep="")
ranks = paste("RANK\n2018: ",rank18,"\n2017: ",rank17,sep="")
s18 = paste("2018: ",toString(gscore18*100), "%",sep="")
s17 = paste("2017: ",toString(gscore17*100), "%",sep="")
ggplot(data=thisQ18)+
geom_density(data=thisQ17,aes(Satisfaction),color="coral4") +
geom_segment(aes(x=gscore17,xend=gscore17,y=0,yend=9), color="coral4") +
geom_density(data=thisQ18,aes(`Actual value`)) +
geom_segment(aes(x=gscore18,xend=gscore18,y=0,yend=9)) +
ggtitle(qtext) +
geom_text(label = "Rank", x = .1, y = 8, size = 4, color = "black")+
geom_text(label = r18, x = .1, y = 7.2, size = 6, color = "black")+
geom_text(label = r17, x = .1, y = 6.4, size = 4, color = "coral4")+
geom_text(label = "Score", x = .1, y = 4, size = 4, color = "black")+
geom_text(label = s18, x = .1, y = 3.2, size = 6, color = "black")+
geom_text(label = s17, x = .1, y = 2.4, size = 4, color = "coral4")+
xlim(0,1)
# if(savepng==TRUE){
#   qpng<-paste(Q, '.png')
#   ggsave(qpng,width= 10, height = 6)
# }
}
goldposition(nss18,nss17,'Q01')
goldposition <- function(thisYear,lastYear, Q) {
savepng = FALSE
#get the info for 2017
thisQ17<-dplyr::filter(lastYear, Question == Q)
Gold<-dplyr::filter(thisQ17,INStitution == 'Goldsmiths College')
#individual goldsmiths scores
gscore17<-Gold$Satisfaction
#text of question (with 2017 rank at end)
qtext<-paste(Q, ':  ',Gold$QuText)
#extract rank
pos1 = str_locate(qtext,fixed("("))[1]
pos2 = str_locate(qtext,fixed(")"))[1]
rank17 = substr(qtext,pos1+1,pos2-1)
#shorten question
qtext = substr(qtext, 0, pos1-1)
#get the info 2018, the column names are different
thisQ18<-dplyr::filter(thisYear, `Question Number` == Q)
Gold<-dplyr::filter(thisQ18,Provider == "Goldsmiths' College")
gscore18<-Gold$`Actual value`
#qtext<-Q  #paste(Q, ':  ',Gold$QuText)
#Goldsmiths rank this year?
rnk<-rank(thisQ18$'Actual value', ties.method = "min")
wh<-which(thisQ18$Provider == "Goldsmiths' College", arr.ind=TRUE)
rank18<-toString(rnk[wh])
if((rnk[wh+1]=rnk[wh]) || (rnk[wh-1]=rnk[wh])){
rank18 = paste("=", rank18, sep ="")
}
r18 = paste("2018: ",rank18,sep="")
r17 = paste("2017: ",rank17,sep="")
ranks = paste("RANK\n2018: ",rank18,"\n2017: ",rank17,sep="")
s18 = paste("2018: ",toString(gscore18*100), "%",sep="")
s17 = paste("2017: ",toString(gscore17*100), "%",sep="")
ggplot(data=thisQ18)+
geom_density(data=thisQ17,aes(Satisfaction),color="gold") +
geom_segment(aes(x=gscore17,xend=gscore17,y=0,yend=9), color="gold") +
geom_density(data=thisQ18,aes(`Actual value`)) +
geom_segment(aes(x=gscore18,xend=gscore18,y=0,yend=9)) +
ggtitle(qtext) +
geom_text(label = "Rank", x = .1, y = 8, size = 4, color = "black")+
geom_text(label = r18, x = .1, y = 7.2, size = 6, color = "black")+
geom_text(label = r17, x = .1, y = 6.4, size = 4, color = "gold")+
geom_text(label = "Score", x = .1, y = 4, size = 4, color = "black")+
geom_text(label = s18, x = .1, y = 3.2, size = 6, color = "black")+
geom_text(label = s17, x = .1, y = 2.4, size = 4, color = "gold")+
xlim(0,1)
# if(savepng==TRUE){
#   qpng<-paste(Q, '.png')
#   ggsave(qpng,width= 10, height = 6)
# }
}
goldposition(nss18,nss17,'Q01')
goldposition(nss18,nss17,'Q02')
goldposition(nss18,nss17,'Q03')
goldposition(nss18,nss17,'Q04')
goldposition(nss18,nss17,'Q05')
goldposition(nss18,nss17,'Q05')
source(goldposition)
source('goldposition.R')
goldposition(nss18,nss17,'Q05')
rnk
wh
thisQ18$'Actual value'
rnk<-rank(-thisQ18$'Actual value', ties.method = "min",)
rnk
rnk[wh]
source('goldposition.R')
source('goldposition.R')
source('goldposition.R')
source('goldposition.R')
goldposition(nss18,nss17,'Q01')
goldposition(nss18,nss17,'Q02')
goldposition(nss18,nss17,'Q03')
goldposition(nss18,nss17,'Q04')
source('C:/Users/Caspar/OneDrive - Goldsmiths College/Goldsmiths/NSS/NSS_all_R/NSS2018.R')
source('goldposition.R')
goldposition(nss18,nss17,'Q01')
goldposition(nss18,nss17,'Q02')
goldposition(nss18,nss17,'Q03')
goldposition(nss18,nss17,'Q04')
goldposition(nss18,nss17,'Q05')
goldposition(nss18,nss17,'Q06')
goldposition(nss18,nss17,'Q07')
goldposition(nss18,nss17,'Q08')
goldposition(nss18,nss17,'Q09')
goldposition(nss18,nss17,'Q10')
goldposition(nss18,nss17,'Q11')
goldposition(nss18,nss17,'Q12')
goldposition(nss18,nss17,'Q13')
goldposition(nss18,nss17,'Q14')
goldposition(nss18,nss17,'Q15')
goldposition(nss18,nss17,'Q16')
goldposition(nss18,nss17,'Q17')
goldposition(nss18,nss17,'Q18')
goldposition(nss18,nss17,'Q19')
goldposition(nss18,nss17,'Q20')
goldposition(nss18,nss17,'Q21')
goldposition(nss18,nss17,'Q22')
goldposition(nss18,nss17,'Q23')
goldposition(nss18,nss17,'Q24')
goldposition(nss18,nss17,'Q25')
goldposition(nss18,nss17,'Q26')
goldposition(nss18,nss17,'Q27')
nss18<-read_excel("NSS_taught_all18_Psychology.xlsx")
nss17<-read_excel('NSS_taught_all17_rankings.xlsx',sheet='Sheet1')
goldposition(nss18,nss17,'Q01')
goldposition(nss18,nss17,'Q02')
goldposition(nss18,nss17,'Q03')
goldposition(nss18,nss17,'Q04')
goldposition(nss18,nss17,'Q05')
goldposition(nss18,nss17,'Q06')
goldposition(nss18,nss17,'Q07')
goldposition(nss18,nss17,'Q08')
goldposition(nss18,nss17,'Q09')
goldposition(nss18,nss17,'Q10')
goldposition(nss18,nss17,'Q11')
goldposition(nss18,nss17,'Q12')
goldposition(nss18,nss17,'Q13')
goldposition(nss18,nss17,'Q14')
goldposition(nss18,nss17,'Q15')
goldposition(nss18,nss17,'Q16')
goldposition(nss18,nss17,'Q17')
goldposition(nss18,nss17,'Q18')
goldposition(nss18,nss17,'Q19')
goldposition(nss18,nss17,'Q20')
goldposition(nss18,nss17,'Q21')
goldposition(nss18,nss17,'Q22')
goldposition(nss18,nss17,'Q23')
goldposition(nss18,nss17,'Q24')
goldposition(nss18,nss17,'Q25')
goldposition(nss18,nss17,'Q26')
goldposition(nss18,nss17,'Q27')
source('C:/Users/Caspar/OneDrive - Goldsmiths College/Goldsmiths/NSS/NSS_all_R/NSS2018.R')
londonlist<-read_excel("LondonUnis.xlsx", sheet = "London")
lon17<-nss17%>%filter(UKPRN %in% londonlist$UKPRN)
lon17<-filter(nss18,UKPRN %in% londonlist$UKPRN)
486/27
lon18<-filter(nss18,UKPRN %in% londonlist$UKPRN)
lon17<-filter(nss17,INstution %in% londonlist$Provider)
lon17<-filter(nss17,INStitution %in% londonlist$Provider)
goldposition <- function(thisYear,lastYear, Q) {
#get the info for 2017
thisQ17<-dplyr::filter(lastYear, Question == Q)
Gold<-dplyr::filter(thisQ17,INStitution == 'Goldsmiths College')
#individual goldsmiths scores
gscore17<-Gold$Satisfaction
#text of question (with 2017 rank at end)
qtext<-paste(Q, ':  ',Gold$QuText)
#extract rank
pos1 = str_locate(qtext,fixed("("))[1]
pos2 = str_locate(qtext,fixed(")"))[1]
rank17 = substr(qtext,pos1+1,pos2-1)
#shorten question
qtext = substr(qtext, 0, pos1-1)
#get the info 2018, the column names are different
thisQ18<-dplyr::filter(thisYear, `Question Number` == Q)
Gold<-dplyr::filter(thisQ18,Provider == "Goldsmiths' College")
gscore18<-Gold$`Actual value`
#qtext<-Q  #paste(Q, ':  ',Gold$QuText)
#Goldsmiths rank this year?
#note that we multiply by -1 to rank from highest to lowest
rnk<-rank(-thisQ18$'Actual value', ties.method = "min",)
wh<-which(thisQ18$Provider == "Goldsmiths College", arr.ind=TRUE)
rank18<-toString(rnk[wh])
if((rnk[wh+1]=rnk[wh]) || (rnk[wh-1]=rnk[wh])){
rank18 = paste("=", rank18, sep ="")
}
r18 = paste("2018: ",rank18,sep="")
r17 = paste("2017: ",rank17,sep="")
ranks = paste("RANK\n2018: ",rank18,"\n2017: ",rank17,sep="")
s18 = paste("2018: ",toString(gscore18*100), "%",sep="")
s17 = paste("2017: ",toString(gscore17*100), "%",sep="")
ggplot(data=thisQ18)+
geom_density(data=thisQ17,aes(Satisfaction),color="gold") +
geom_segment(aes(x=gscore17,xend=gscore17,y=0,yend=9), color="gold") +
geom_density(data=thisQ18,aes(`Actual value`)) +
geom_segment(aes(x=gscore18,xend=gscore18,y=0,yend=9)) +
ggtitle(qtext) +
geom_text(label = "Rank", x = .1, y = 8, size = 4, color = "black")+
geom_text(label = r18, x = .1, y = 7.2, size = 6, color = "black")+
geom_text(label = r17, x = .1, y = 6.4, size = 4, color = "gold")+
geom_text(label = "Score", x = .1, y = 4, size = 4, color = "black")+
geom_text(label = s18, x = .1, y = 3.2, size = 6, color = "black")+
geom_text(label = s17, x = .1, y = 2.4, size = 4, color = "gold")+
xlim(0,1)
qpng<-paste(Q, '.png')
ggsave(qpng,width= 10, height = 6)
}
source('goldposition.R')
londonlist<-read_excel("LondonUnis.xlsx", sheet = "London")
nss18<-read_excel("NSS_taught_all18_Psychology.xlsx")
nss17<-read_excel('NSS_taught_all17_rankings.xlsx',sheet='Sheet1')
lon18<-filter(nss18,UKPRN %in% londonlist$UKPRN)
lon17<-filter(nss17,Provider %in% londonlist$Provider)
lon18<-filter(nss18,Provider %in% londonlist$Provider)
lon17<-filter(nss17,Provider %in% londonlist$Provider)
goldposition(nss18,nss17,'Q04')
source('goldposition.R')
goldposition(nss18,nss17,'Q04')
goldposition(nss18,nss17,'Q05')
goldposition(lon18,lon17,'Q01')
View(nss17)
goldposition(lon18,lon18,'Q02')
goldposition(lon18,lon17,'Q01')
goldposition(lon18,lon17,'Q02')
goldposition(lon18,lon17,'Q03')
goldposition(lon18,lon17,'Q04')
goldposition(lon18,lon17,'Q05')
goldposition(lon18,lon17,'Q06')
goldposition(lon18,lon17,'Q08')
goldposition(lon18,lon17,'Q10')
goldposition(lon18,lon17,'Q12')
goldposition(lon18,lon17,'Q13')
goldposition(lon18,lon17,'Q14')
goldposition(lon18,lon17,'Q15')
source('goldposition.R')
goldposition(lon18,lon17,'Q01')
goldposition(lon18,lon17,'Q02')
goldposition(lon18,lon17,'Q03')
goldposition(lon18,lon17,'Q04')
goldposition(lon18,lon17,'Q05')
goldposition(lon18,lon17,'Q06')
goldposition(lon18,lon17,'Q07')
goldposition(lon18,lon17,'Q08')
goldposition(lon18,lon17,'Q09')
goldposition(lon18,lon17,'Q10')
goldposition(lon18,lon17,'Q11')
goldposition(lon18,lon17,'Q12')
goldposition(lon18,lon17,'Q13')
goldposition(lon18,lon17,'Q14')
goldposition(lon18,lon17,'Q15')
goldposition(lon18,lon17,'Q16')
goldposition(lon18,lon17,'Q17')
goldposition(lon18,lon17,'Q18')
goldposition(lon18,lon17,'Q19')
goldposition(lon18,lon17,'Q20')
goldposition(lon18,lon17,'Q21')
goldposition(lon18,lon17,'Q22')
goldposition(lon18,lon17,'Q23')
goldposition(lon18,lon17,'Q24')
goldposition(lon18,lon17,'Q25')
goldposition(lon18,lon17,'Q26')
goldposition(lon18,lon17,'Q27')
